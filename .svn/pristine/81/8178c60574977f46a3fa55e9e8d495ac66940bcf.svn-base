<template>
  <div class="last-viewed-block">
    <template v-if="this.hasLastViewed">
      <div class="ioo-mt-40 mb-4 ioo-mb-40">
        <div class="d-flex flex-row">
          <div class="p-2 pr-10 ioo-mr-10">
            <h4
              class="font-bold"
            >{{this.GetSanaText("IOO_LastViewed_Header","Last viewed products")}}</h4>
          </div>
          <div class="p-2 ioo-mt-7">
            <a class="ml-2" href>{{this.GetSanaText("IOO_ViewAll","View all")}}</a>
          </div>
          <div class="p-2 ioo-mt-7" v-on:click="handleclearLatviewItems">
            <a class="ml-2">{{this.GetSanaText("IOO_Clear","Clear")}}</a>
          </div>
        </div>
      </div>
      <div class="caresoul-grid-container">
        <sana-carosel v-bind:listSize="lastviewedItemList.length">
          <div
            class="grid-carousel--card col-4"
            v-for="(item,index) in lastviewedItemList"
            v-bind:key="index"
          >
            <lastview-items v-bind:LastViewditemModel="item"></lastview-items>
          </div>
        </sana-carosel>
      </div>
    </template>
  </div>
</template>

<script>
import carosel from "../shared/ui/Carousel.vue";
import globalHelper from "../../helpers/GlobalHelper";
import LastViewedItems from "./LastViewedTabItems.vue";

export default {
  name: "LastViewed",
  components: {
    "sana-carosel": carosel,
    "lastview-items": LastViewedItems
  },
  props: {
    ProductId: {
      type: String,
      required: true
    },
    LastViewdItemList: {
      type: Array,
      required: true
    }
  },
  computed: {
    hasLastViewed() {
      return this.lastviewedItemList.length > 0;
    }
  },
  data() {
    return {
      isLoading: false,
      selectedProductType: "00",
      lastviewedItemList: []
    };
  },
  mounted() {
    this.lastviewedItemList = this.LastViewdItemList;
  },
  methods: {
    onProductTypeChangeSelection(val) {
      this.selectedProductTypeId = val.Id;
      this.selectedProductTypeTitle = val.Title;
    },
    getProductTypes(ProductModel) {
      return ProductModel && ProductModel.ProductType.length > 0
        ? ProductModel.ProductType
        : [];
    },
    /* events */
    handleclearLatviewItems() {
      globalHelper.clearLastViewedItems();
      this.lastviewedItemList = [];
    }
  }
};
</script>
