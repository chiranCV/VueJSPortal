// API Authentication Actions.

import { FETCH_AUTH_TOEKN } from "../../action-types";
import { SAVE_AUTH_TOKEN_SATE } from "../../mutation-types";
import authApi from "../../../api/authentication-api";
import sesionManager from "../../../helpers/session-manager";
import appConfig from "../../../config.json";

export default {
  // fetch current basket result
  [FETCH_AUTH_TOEKN]: (context, headerOptions) =>
    new Promise((resolve, reject) => {
      if (!sesionManager.chekcCookieExsitst(appConfig.Cookiekeys.IsValidToken)) {
        authApi
          .getToken(headerOptions)
          .then((token) => {
            console.log("Token comit", token);
            context.commit(SAVE_AUTH_TOKEN_SATE, token);
            sesionManager.setCookie(appConfig.Cookiekeys.IsValidToken, true, token.expires_in);
            resolve();
          })
          .catch((error) => {
            reject();
            throw error;
          });
      } else {
        resolve();
      }
    })
};
