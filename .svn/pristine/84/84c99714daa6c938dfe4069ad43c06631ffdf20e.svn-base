<template>
  <div class="ioo-clearfix">
    <sana-button
      v-bind:BtnId="'Inventory_Ckeck' + this.ProductId"
      BtnClass="ioo-sm-btn check-inv-btn ioo-btn ioo-btn-default no-edge"
      BtnTitle="Check Inventory"
      BtnTitleSanaTextKey="IOO_CheckInventoryBtnTitle"
      BtnText="Check Inventory"
      BtnTextSanaTextKey="IOO_CheckInventoryBtnText"
      v-bind:BtnPostTextClass="BtnPostTextClass"
      v-on:onButtonClick="getGlobalInventory"
    ></sana-button>
    <sana-model-popup ref="global_inventory_model_popup">
      <div class="modal-content">
        <div class="modal-header">
          <h4 class="modal-title font-weight-bold">{{this.ProductId + '(' + this.ProductType + ')'}}</h4>
          <h6
            class="font-weight-bold"
          >{{ getSanaTextValue("IOO_CheckInventory_Item","Item: ") + this.ProductId }}</h6>
          <button type="button" data-dismiss="modal" aria-label="Close" class="close">
            <span aria-hidden="true">Ã—</span>
          </button>
        </div>
        <div class="modal-body">
          <div class="ioo-table">
            <div class="ioo-table-row">
              <div
                class="ioo-table-head"
              >{{this.getSanaTextValue('IOO_CheckInventory_SupplierCodeColumnTitle', 'Supplier code')}}</div>
              <div
                class="ioo-table-head"
              >{{this.getSanaTextValue('IOO_CheckInventory_DateColumnTitle', 'Date')}}</div>
              <div
                class="ioo-table-head"
              >{{this.getSanaTextValue('IOO_CheckInventory_SupplierStockColumnTitle', 'Supplier stock')}}</div>
              <div
                class="ioo-table-head"
              >{{this.getSanaTextValue('IOO_CheckInventory_MessageColumnTitle', 'Message')}}</div>
            </div>
            <div class="ioo-table-body">
              <div
                class="ioo-table-row"
                v-for="(item, index) in this.itemSuppliers"
                v-bind:key="index"
              >
                <div class="ioo-table-cell">{{item.SupplierCode}}</div>
                <div class="ioo-table-cell">{{item.Date}}</div>
                <div class="ioo-table-cell">{{item.Stock}}</div>
                <div class="ioo-table-cell">{{item.Message}}</div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </sana-model-popup>
  </div>
</template>

<script>
import $ from "jquery";
import { mapActions } from "vuex";
import { FETCH_GLOBAL_INVENTORY } from "../../store/action-types";
import Button from "./ui/Button.vue";
import ModelPopup from "./ui/ModelPopup.vue";

export default {
  name: "CheckInventory",
  components: {
    "sana-button": Button,
    "sana-model-popup": ModelPopup
  },
  props: {
    ProductId: {
      type: String,
      required: true
    },
    ProductType: {
      type: String,
      required: false
    },
    Quantity: {
      type: String,
      required: true
    },
    BtnPostTextClass: {
      type: String,
      required: false
    }
  },
  data() {
    return {
      itemSuppliers: []
    };
  },
  methods: {
    ...mapActions("products", {
      fetchGlobalInventory: FETCH_GLOBAL_INVENTORY
    }),
    getGlobalInventory() {
      if (!(this.ProductId /* && this.ProductType */ && this.Quantity)) return;
      const options = {
        id: this.ProductId,
        type: this.ProductType,
        qty: this.Quantity
      };
      this.fetchGlobalInventory(options).then((result) => {
        if (result && result.ItemInventories && this.ProductType) {
          this.itemSuppliers = result.ItemInventories[0].ItemSuppliers;
          const element = this.$refs.global_inventory_model_popup.$el;
          $(element).modal("show");
        }
      });
    },
    getSanaTextValue(textKey, defaultValue) {
      if (!textKey) {
        return defaultValue || "";
      }
      return this.GetSanaText(textKey, defaultValue);
    }
  }
};
</script>
