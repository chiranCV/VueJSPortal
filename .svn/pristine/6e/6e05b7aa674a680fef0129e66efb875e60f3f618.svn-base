<template>
  <div class="grid-border">
    <div class="product-img">
      <img class="img-fluid" src="@/assets/lg-thumb-img.jpg">
    </div>
    <div class="product-info">
      <div class="row">
        <div class="col-7">
          <!-- eslint-disable max-len -->
          <a>
            <h6
              v-text="this.ListItem.ProductModel.Product.Title"
              v-bind:title="this.ListItem.ProductModel.Product.Title"
            ></h6>
          </a>
          <span v-text="this.ListItem.ProductModel.Product.Id"></span>
          <span class="list-dropdown-text float-right">
            <sana-dropdown
              SelectType="basic"
              v-bind:DataList="this.getGlobleInventoryCheckTypes"
              v-bind:PreSelecteditem="this.getGlobleInventoryCheckTypes[0]"
              IdField="Id"
              TextField="Title"
              DefaultText="Select Type"
              DefaultTextSanaTextKey="IOO_GlobalInventoryCheck_Type_DefaultText"
              v-on:onChangeSelection="setGlobleInventoryCheckTypes"
            ></sana-dropdown>
          </span>
          <sana-stock v-bind:StockModel="stockModel"></sana-stock>
          <template v-if="!this.hasCrossReference">
            <span>
              {{this.GetSanaText("CrossReference","Cross Reference:")
              + this.ListItem.CrossReferenceNumber}}
            </span>
          </template>
          <button
            class="ioo-btn ioo-btn-default ioo-sm-btn no-edge"
            type="button"
            data-toggle="modal"
            data-target="#inventoryCheck"
          >Check Inventory</button>
        </div>
        <div class="col-5">
          <div class="product-price text-right">
            <sana-price
              v-bind:title="this.GetSanaText('IOO_Net_Price','Net Price')"
              v-bind:Price="this.ListItem.NetPrice"
            ></sana-price>
            <small>
              <sana-price
                v-bind:title="this.GetSanaText('IOO_Gross_Price','Gross Price')"
                v-bind:Price="this.ListItem.GrossPrice"
              ></sana-price>
            </small>
          </div>
          <div class="auro-increment-input text-right">
            <sana-qty-box v-bind:QuantityModel="null" v-on:onQuantityChange="this.onQuantityChange"></sana-qty-box>
          </div>
        </div>
      </div>
      <div class="btn-block row clearfix text-center">
        <div class="col-5 float-left pl-0 ioo-mw-100 ioo-dk-pr-0">
          <sana-link-button
            v-bind:BtnId="getComponentId('linkbtn',this.ListItem.ProductModel.Product.Id)"
            BtnClass="ioo-btn ioo-btn-default"
            BtnTextClass="btn-text"
            BtnTitle="Details"
            BtnTitleSanaTextKey="I00_DetailsButtonTitle"
            BtnText="Details"
            BtnTextSanaTextKey="I00_DetailsButtonText"
            BtnRouteName="Detail"
            v-bind:BtnRouteParms="{ Id: this.ListItem.ProductModel.Product.Id}"
          ></sana-link-button>
        </div>
        <div class="col-7 float-left pr-0 ioo-mw-100 ioo-dk-pl-0">
          <sana-button
            BtnClass="ioo-btn ioo-btn-primary float-right"
            BtnTextClass="btn-text"
            v-bind:BtnId="getComponentId('btn',this.ListItem.ProductModel.Product.Id)"
            BtnTitle="Add to basket"
            BtnTitleSanaTextKey="I00_AddtoBasketTitle"
            BtnText="Add to basket"
            BtnTextSanaTextKey="I00_AddtoBasketTitle"
            BtnPostTextClass="btn-cart-white"
          ></sana-button>
        </div>
      </div>
    </div>
  </div>
</template>
<script>
import QtyBox from "../shared/ui/QuantityBox.vue";
import PriceLabel from "../shared/ui/PriceLabel.vue";
import Stockindicator from "../shared/ui/StockIndicator.vue";
import Dropdown from "../shared/ui/Dropdown.vue";
import Button from "../shared/ui/Button.vue";
import LinkButton from "../shared/ui/LinkButton.vue";

export default {
  name: "ProductGridItem",
  components: {
    "sana-qty-box": QtyBox,
    "sana-price": PriceLabel,
    "sana-stock": Stockindicator,
    "sana-dropdown": Dropdown,
    "sana-button": Button,
    "sana-link-button": LinkButton
  },
  props: {
    ListItem: {
      type: Object
    }
  },
  computed: {
    stockModel() {
      return this.ListItem ? this.ListItem.Stock : {};
    },
    hasCrossReference() {
      return !!(this.ListItem && this.ListItem.CrossReferenceNumber !== "");
    },
    getGlobleInventoryCheckTypes() {
      return this.ListItem &&
        this.ListItem.ProductModel &&
        this.ListItem.ProductModel.ProductType &&
        this.ListItem.ProductModel.ProductType.length > 0
        ? this.ListItem.ProductModel.ProductType
        : [];
    }
  },
  methods: {
    viewListItem() {
      console.log("GridItem Item:", this.ListItem);
      return "101";
    },
    getComponentId(component, key) {
      return `${component}_${key}`;
    }
  }
};
</script>
